{"version":3,"file":"component---src-templates-blogpost-js-f93df79fdcc62c43062e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/construct.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://gatsby-starter-default/./node_modules/katex/contrib/mhchem/mhchem.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-mdx/index.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://gatsby-starter-default/./src/templates/blogpost.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/* eslint-disable */\n\n/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  KaTeX mhchem.js\n *\n *  This file implements a KaTeX version of mhchem version 3.3.0.\n *  It is adapted from MathJax/extensions/TeX/mhchem.js\n *  It differs from the MathJax version as follows:\n *    1. The interface is changed so that it can be called from KaTeX, not MathJax.\n *    2. \\rlap and \\llap are replaced with \\mathrlap and \\mathllap.\n *    3. Four lines of code are edited in order to use \\raisebox instead of \\raise.\n *    4. The reaction arrow code is simplified. All reaction arrows are rendered\n *       using KaTeX extensible arrows instead of building non-extensible arrows.\n *    5. \\tripledash vertical alignment is slightly adjusted.\n *\n *    This code, as other KaTeX code, is released under the MIT license.\n * \n * /*************************************************************\n *\n *  MathJax/extensions/TeX/mhchem.js\n *\n *  Implements the \\ce command for handling chemical formulas\n *  from the mhchem LaTeX package.\n *\n *  ---------------------------------------------------------------------\n *\n *  Copyright (c) 2011-2015 The MathJax Consortium\n *  Copyright (c) 2015-2018 Martin Hensel\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n//\n// Coding Style\n//   - use '' for identifiers that can by minified/uglified\n//   - use \"\" for strings that need to stay untouched\n// version: \"3.3.0\" for MathJax and KaTeX\n// Add \\ce, \\pu, and \\tripledash to the KaTeX macros.\nkatex.__defineMacro(\"\\\\ce\", function (context) {\n  return chemParse(context.consumeArgs(1)[0], \"ce\");\n});\n\nkatex.__defineMacro(\"\\\\pu\", function (context) {\n  return chemParse(context.consumeArgs(1)[0], \"pu\");\n}); //  Needed for \\bond for the ~ forms\n//  Raise by 2.56mu, not 2mu. We're raising a hyphen-minus, U+002D, not \n//  a mathematical minus, U+2212. So we need that extra 0.56.\n\n\nkatex.__defineMacro(\"\\\\tripledash\", \"{\\\\vphantom{-}\\\\raisebox{2.56mu}{$\\\\mkern2mu\" + \"\\\\tiny\\\\text{-}\\\\mkern1mu\\\\text{-}\\\\mkern1mu\\\\text{-}\\\\mkern2mu$}}\");\n\nimport katex from \"katex\"; //\n//  This is the main function for handing the \\ce and \\pu commands.\n//  It takes the argument to \\ce or \\pu and returns the corresponding TeX string.\n//\n\nvar chemParse = function chemParse(tokens, stateMachine) {\n  // Recreate the argument string from KaTeX's array of tokens.\n  var str = \"\";\n  var expectedLoc = tokens[tokens.length - 1].loc.start;\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    if (tokens[i].loc.start > expectedLoc) {\n      // context.consumeArgs has eaten a space.\n      str += \" \";\n      expectedLoc = tokens[i].loc.start;\n    }\n\n    str += tokens[i].text;\n    expectedLoc += tokens[i].text.length;\n  }\n\n  var tex = texify.go(mhchemParser.go(str, stateMachine));\n  return tex;\n}; //\n// Core parser for mhchem syntax  (recursive)\n//\n\n/** @type {MhchemParser} */\n\n\nvar mhchemParser = {\n  //\n  // Parses mchem \\ce syntax\n  //\n  // Call like\n  //   go(\"H2O\");\n  //\n  go: function go(input, stateMachine) {\n    if (!input) {\n      return [];\n    }\n\n    if (stateMachine === undefined) {\n      stateMachine = 'ce';\n    }\n\n    var state = '0'; //\n    // String buffers for parsing:\n    //\n    // buffer.a == amount\n    // buffer.o == element\n    // buffer.b == left-side superscript\n    // buffer.p == left-side subscript\n    // buffer.q == right-side subscript\n    // buffer.d == right-side superscript\n    //\n    // buffer.r == arrow\n    // buffer.rdt == arrow, script above, type\n    // buffer.rd == arrow, script above, content\n    // buffer.rqt == arrow, script below, type\n    // buffer.rq == arrow, script below, content\n    //\n    // buffer.text_\n    // buffer.rm\n    // etc.\n    //\n    // buffer.parenthesisLevel == int, starting at 0\n    // buffer.sb == bool, space before\n    // buffer.beginsWithBond == bool\n    //\n    // These letters are also used as state names.\n    //\n    // Other states:\n    // 0 == begin of main part (arrow/operator unlikely)\n    // 1 == next entity\n    // 2 == next entity (arrow/operator unlikely)\n    // 3 == next atom\n    // c == macro\n    //\n\n    /** @type {Buffer} */\n\n    var buffer = {};\n    buffer['parenthesisLevel'] = 0;\n    input = input.replace(/\\n/g, \" \");\n    input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n    input = input.replace(/[\\u2026]/g, \"...\"); //\n    // Looks through mhchemParser.transitions, to execute a matching action\n    // (recursive)\n    //\n\n    var lastInput;\n    var watchdog = 10;\n    /** @type {ParserOutput[]} */\n\n    var output = [];\n\n    while (true) {\n      if (lastInput !== input) {\n        watchdog = 10;\n        lastInput = input;\n      } else {\n        watchdog--;\n      } //\n      // Find actions in transition table\n      //\n\n\n      var machine = mhchemParser.stateMachines[stateMachine];\n      var t = machine.transitions[state] || machine.transitions['*'];\n\n      iterateTransitions: for (var i = 0; i < t.length; i++) {\n        var matches = mhchemParser.patterns.match_(t[i].pattern, input);\n\n        if (matches) {\n          //\n          // Execute actions\n          //\n          var task = t[i].task;\n\n          for (var iA = 0; iA < task.action_.length; iA++) {\n            var o; //\n            // Find and execute action\n            //\n\n            if (machine.actions[task.action_[iA].type_]) {\n              o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n            } else if (mhchemParser.actions[task.action_[iA].type_]) {\n              o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n            } else {\n              throw [\"MhchemBugA\", \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\"]; // Trying to use non-existing action\n            } //\n            // Add output\n            //\n\n\n            mhchemParser.concatArray(output, o);\n          } //\n          // Set next state,\n          // Shorten input,\n          // Continue with next character\n          //   (= apply only one transition per position)\n          //\n\n\n          state = task.nextState || state;\n\n          if (input.length > 0) {\n            if (!task.revisit) {\n              input = matches.remainder;\n            }\n\n            if (!task.toContinue) {\n              break iterateTransitions;\n            }\n          } else {\n            return output;\n          }\n        }\n      } //\n      // Prevent infinite loop\n      //\n\n\n      if (watchdog <= 0) {\n        throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"]; // Unexpected character\n      }\n    }\n  },\n  concatArray: function concatArray(a, b) {\n    if (b) {\n      if (Array.isArray(b)) {\n        for (var iB = 0; iB < b.length; iB++) {\n          a.push(b[iB]);\n        }\n      } else {\n        a.push(b);\n      }\n    }\n  },\n  patterns: {\n    //\n    // Matching patterns\n    // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\n    //\n    patterns: {\n      // property names must not look like integers (\"2\") for correct property traversal order, later on\n      'empty': /^$/,\n      'else': /^./,\n      'else2': /^./,\n      'space': /^\\s/,\n      'space A': /^\\s(?=[A-Z\\\\$])/,\n      'space$': /^\\s$/,\n      'a-z': /^[a-z]/,\n      'x': /^x/,\n      'x$': /^x$/,\n      'i$': /^i$/,\n      'letters': /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n      '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n      'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n      '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n      'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n      'digits': /^[0-9]+/,\n      '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n      '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n      '(-)(9.,9)(e)(99)': function e99(input) {\n        var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n\n        if (m && m[0]) {\n          return {\n            match_: m.splice(1),\n            remainder: input.substr(m[0].length)\n          };\n        }\n\n        return null;\n      },\n      '(-)(9)^(-9)': function _(input) {\n        var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/);\n\n        if (m && m[0]) {\n          return {\n            match_: m.splice(1),\n            remainder: input.substr(m[0].length)\n          };\n        }\n\n        return null;\n      },\n      'state of aggregation $': function stateOfAggregation$(input) {\n        // ... or crystal system\n        var a = mhchemParser.patterns.findObserveGroups(input, \"\", /^\\([a-z]{1,3}(?=[\\),])/, \")\", \"\"); // (aq), (aq,$\\infty$), (aq, sat)\n\n        if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\n          return a;\n        } //  AND end of 'phrase'\n\n\n        var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/); // OR crystal system ($o$) (\\ca$c$)\n\n        if (m) {\n          return {\n            match_: m[0],\n            remainder: input.substr(m[0].length)\n          };\n        }\n\n        return null;\n      },\n      '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n      '{[(': /^(?:\\\\\\{|\\[|\\()/,\n      ')]}': /^(?:\\)|\\]|\\\\\\})/,\n      ', ': /^[,;]\\s*/,\n      ',': /^[,;]/,\n      '.': /^[.]/,\n      '. ': /^([.\\u22C5\\u00B7\\u2022])\\s*/,\n      '...': /^\\.\\.\\.(?=$|[^.])/,\n      '* ': /^([*])\\s*/,\n      '^{(...)}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\");\n      },\n      '^($...$)': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\");\n      },\n      '^a': /^\\^([0-9]+|[^\\\\_])/,\n      '^\\\\x{}{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true);\n      },\n      '^\\\\x{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n      },\n      '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n      '^(-1)': /^\\^(-?\\d+)/,\n      '\\'': /^'/,\n      '_{(...)}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\");\n      },\n      '_($...$)': function _$$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\");\n      },\n      '_9': /^_([+\\-]?[0-9]+|[^\\\\])/,\n      '_\\\\x{}{}': function _X(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true);\n      },\n      '_\\\\x{}': function _X(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n      },\n      '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n      '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n      '{}': /^\\{\\}/,\n      '{...}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\");\n      },\n      '{(...)}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\");\n      },\n      '$...$': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n      },\n      '${(...)}$': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\");\n      },\n      '$(...)$': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\");\n      },\n      '=<>': /^[=<>]/,\n      '#': /^[#\\u2261]/,\n      '+': /^\\+/,\n      '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\n      // -space -, -; -] -/ -$ -state-of-aggregation\n      '-9': /^-(?=[0-9])/,\n      '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n      '-': /^-/,\n      'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n      'operator': /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n      'arrowUpDown': /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n      '\\\\bond{(...)}': function bond(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\");\n      },\n      '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n      'CMT': /^[CMT](?=\\[)/,\n      '[(...)]': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\");\n      },\n      '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n      '\\\\,': /^(?:\\\\[,\\ ;:])/,\n      // \\\\x - but output no space before\n      '\\\\x{}{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true);\n      },\n      '\\\\x{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n      },\n      '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n      '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n      'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\n      // only those with numbers in front, because the others will be formatted correctly anyway\n      'others': /^[\\/~|]/,\n      '\\\\frac{(...)}': function frac(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\frac{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n      },\n      '\\\\overset{(...)}': function overset(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\overset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n      },\n      \"\\\\underset{(...)}\": function underset(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\underset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n      },\n      \"\\\\underbrace{(...)}\": function underbrace(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\underbrace{\", \"\", \"\", \"}_\", \"{\", \"\", \"\", \"}\");\n      },\n      '\\\\color{(...)}0': function color0(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\");\n      },\n      '\\\\color{(...)}{(...)}1': function color1(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n      },\n      '\\\\color(...){(...)}2': function color2(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\color\", \"\\\\\", \"\", /^(?=\\{)/, \"{\", \"\", \"\", \"}\");\n      },\n      '\\\\ce{(...)}': function ce(input) {\n        return mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\");\n      },\n      'oxidation$': /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n      'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n      // 0 could be oxidation or charge\n      'roman numeral': /^[IVX]+/,\n      '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n      'amount': function amount(input) {\n        var match; // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\n\n        match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n\n        if (match) {\n          return {\n            match_: match[0],\n            remainder: input.substr(match[0].length)\n          };\n        }\n\n        var a = mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n\n        if (a) {\n          // e.g. $2n-1$, $-$\n          match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n\n          if (match) {\n            return {\n              match_: match[0],\n              remainder: input.substr(match[0].length)\n            };\n          }\n        }\n\n        return null;\n      },\n      'amount2': function amount2(input) {\n        return this['amount'](input);\n      },\n      '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n      'formula$': function formula$(input) {\n        if (input.match(/^\\([a-z]+\\)$/)) {\n          return null;\n        } // state of aggregation = no formula\n\n\n        var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n\n        if (match) {\n          return {\n            match_: match[0],\n            remainder: input.substr(match[0].length)\n          };\n        }\n\n        return null;\n      },\n      'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n      '/': /^\\s*(\\/)\\s*/,\n      '//': /^\\s*(\\/\\/)\\s*/,\n      '*': /^\\s*[*.]\\s*/\n    },\n    findObserveGroups: function findObserveGroups(input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n      /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\n      var _match = function _match(input, pattern) {\n        if (typeof pattern === \"string\") {\n          if (input.indexOf(pattern) !== 0) {\n            return null;\n          }\n\n          return pattern;\n        } else {\n          var match = input.match(pattern);\n\n          if (!match) {\n            return null;\n          }\n\n          return match[0];\n        }\n      };\n      /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\n\n\n      var _findObserveGroups = function _findObserveGroups(input, i, endChars) {\n        var braces = 0;\n\n        while (i < input.length) {\n          var a = input.charAt(i);\n\n          var match = _match(input.substr(i), endChars);\n\n          if (match !== null && braces === 0) {\n            return {\n              endMatchBegin: i,\n              endMatchEnd: i + match.length\n            };\n          } else if (a === \"{\") {\n            braces++;\n          } else if (a === \"}\") {\n            if (braces === 0) {\n              throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n            } else {\n              braces--;\n            }\n          }\n\n          i++;\n        }\n\n        if (braces > 0) {\n          return null;\n        }\n\n        return null;\n      };\n\n      var match = _match(input, begExcl);\n\n      if (match === null) {\n        return null;\n      }\n\n      input = input.substr(match.length);\n      match = _match(input, begIncl);\n\n      if (match === null) {\n        return null;\n      }\n\n      var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n\n      if (e === null) {\n        return null;\n      }\n\n      var match1 = input.substring(0, endIncl ? e.endMatchEnd : e.endMatchBegin);\n\n      if (!(beg2Excl || beg2Incl)) {\n        return {\n          match_: match1,\n          remainder: input.substr(e.endMatchEnd)\n        };\n      } else {\n        var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n\n        if (group2 === null) {\n          return null;\n        }\n        /** @type {string[]} */\n\n\n        var matchRet = [match1, group2.match_];\n        return {\n          match_: combine ? matchRet.join(\"\") : matchRet,\n          remainder: group2.remainder\n        };\n      }\n    },\n    //\n    // Matching function\n    // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\n    // returns null or {match_:\"a\", remainder:\"bc\"}\n    //\n    match_: function match_(m, input) {\n      var pattern = mhchemParser.patterns.patterns[m];\n\n      if (pattern === undefined) {\n        throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"]; // Trying to use non-existing pattern\n      } else if (typeof pattern === \"function\") {\n        return mhchemParser.patterns.patterns[m](input); // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\n      } else {\n        // RegExp\n        var match = input.match(pattern);\n\n        if (match) {\n          var mm;\n\n          if (match[2]) {\n            mm = [match[1], match[2]];\n          } else if (match[1]) {\n            mm = match[1];\n          } else {\n            mm = match[0];\n          }\n\n          return {\n            match_: mm,\n            remainder: input.substr(match[0].length)\n          };\n        }\n\n        return null;\n      }\n    }\n  },\n  //\n  // Generic state machine actions\n  //\n  actions: {\n    'a=': function a(buffer, m) {\n      buffer.a = (buffer.a || \"\") + m;\n    },\n    'b=': function b(buffer, m) {\n      buffer.b = (buffer.b || \"\") + m;\n    },\n    'p=': function p(buffer, m) {\n      buffer.p = (buffer.p || \"\") + m;\n    },\n    'o=': function o(buffer, m) {\n      buffer.o = (buffer.o || \"\") + m;\n    },\n    'q=': function q(buffer, m) {\n      buffer.q = (buffer.q || \"\") + m;\n    },\n    'd=': function d(buffer, m) {\n      buffer.d = (buffer.d || \"\") + m;\n    },\n    'rm=': function rm(buffer, m) {\n      buffer.rm = (buffer.rm || \"\") + m;\n    },\n    'text=': function text(buffer, m) {\n      buffer.text_ = (buffer.text_ || \"\") + m;\n    },\n    'insert': function insert(buffer, m, a) {\n      return {\n        type_: a\n      };\n    },\n    'insert+p1': function insertP1(buffer, m, a) {\n      return {\n        type_: a,\n        p1: m\n      };\n    },\n    'insert+p1+p2': function insertP1P2(buffer, m, a) {\n      return {\n        type_: a,\n        p1: m[0],\n        p2: m[1]\n      };\n    },\n    'copy': function copy(buffer, m) {\n      return m;\n    },\n    'rm': function rm(buffer, m) {\n      return {\n        type_: 'rm',\n        p1: m || \"\"\n      };\n    },\n    'text': function text(buffer, m) {\n      return mhchemParser.go(m, 'text');\n    },\n    '{text}': function text(buffer, m) {\n      var ret = [\"{\"];\n      mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));\n      ret.push(\"}\");\n      return ret;\n    },\n    'tex-math': function texMath(buffer, m) {\n      return mhchemParser.go(m, 'tex-math');\n    },\n    'tex-math tight': function texMathTight(buffer, m) {\n      return mhchemParser.go(m, 'tex-math tight');\n    },\n    'bond': function bond(buffer, m, k) {\n      return {\n        type_: 'bond',\n        kind_: k || m\n      };\n    },\n    'color0-output': function color0Output(buffer, m) {\n      return {\n        type_: 'color0',\n        color: m[0]\n      };\n    },\n    'ce': function ce(buffer, m) {\n      return mhchemParser.go(m);\n    },\n    '1/2': function _(buffer, m) {\n      /** @type {ParserOutput[]} */\n      var ret = [];\n\n      if (m.match(/^[+\\-]/)) {\n        ret.push(m.substr(0, 1));\n        m = m.substr(1);\n      }\n\n      var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n      n[1] = n[1].replace(/\\$/g, \"\");\n      ret.push({\n        type_: 'frac',\n        p1: n[1],\n        p2: n[2]\n      });\n\n      if (n[3]) {\n        n[3] = n[3].replace(/\\$/g, \"\");\n        ret.push({\n          type_: 'tex-math',\n          p1: n[3]\n        });\n      }\n\n      return ret;\n    },\n    '9,9': function _(buffer, m) {\n      return mhchemParser.go(m, '9,9');\n    }\n  },\n  //\n  // createTransitions\n  // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\n  // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\n  //\n  createTransitions: function createTransitions(o) {\n    var pattern, state;\n    /** @type {string[]} */\n\n    var stateArray;\n    var i; //\n    // 1. Collect all states\n    //\n\n    /** @type {Transitions} */\n\n    var transitions = {};\n\n    for (pattern in o) {\n      for (state in o[pattern]) {\n        stateArray = state.split(\"|\");\n        o[pattern][state].stateArray = stateArray;\n\n        for (i = 0; i < stateArray.length; i++) {\n          transitions[stateArray[i]] = [];\n        }\n      }\n    } //\n    // 2. Fill states\n    //\n\n\n    for (pattern in o) {\n      for (state in o[pattern]) {\n        stateArray = o[pattern][state].stateArray || [];\n\n        for (i = 0; i < stateArray.length; i++) {\n          //\n          // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\n          // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\n          //\n\n          /** @type {any} */\n          var p = o[pattern][state];\n\n          if (p.action_) {\n            p.action_ = [].concat(p.action_);\n\n            for (var k = 0; k < p.action_.length; k++) {\n              if (typeof p.action_[k] === \"string\") {\n                p.action_[k] = {\n                  type_: p.action_[k]\n                };\n              }\n            }\n          } else {\n            p.action_ = [];\n          } //\n          // 2.b Multi-insert\n          //\n\n\n          var patternArray = pattern.split(\"|\");\n\n          for (var j = 0; j < patternArray.length; j++) {\n            if (stateArray[i] === '*') {\n              // insert into all\n              for (var t in transitions) {\n                transitions[t].push({\n                  pattern: patternArray[j],\n                  task: p\n                });\n              }\n            } else {\n              transitions[stateArray[i]].push({\n                pattern: patternArray[j],\n                task: p\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return transitions;\n  },\n  stateMachines: {}\n}; //\n// Definition of state machines\n//\n\nmhchemParser.stateMachines = {\n  //\n  // \\ce state machines\n  //\n  //#region ce\n  'ce': {\n    // main parser\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {\n          action_: 'output'\n        }\n      },\n      'else': {\n        '0|1|2': {\n          action_: 'beginsWithBond=false',\n          revisit: true,\n          toContinue: true\n        }\n      },\n      'oxidation$': {\n        '0': {\n          action_: 'oxidation-output'\n        }\n      },\n      'CMT': {\n        'r': {\n          action_: 'rdt=',\n          nextState: 'rt'\n        },\n        'rd': {\n          action_: 'rqt=',\n          nextState: 'rdt'\n        }\n      },\n      'arrowUpDown': {\n        '0|1|2|as': {\n          action_: ['sb=false', 'output', 'operator'],\n          nextState: '1'\n        }\n      },\n      'uprightEntities': {\n        '0|1|2': {\n          action_: ['o=', 'output'],\n          nextState: '1'\n        }\n      },\n      'orbital': {\n        '0|1|2|3': {\n          action_: 'o=',\n          nextState: 'o'\n        }\n      },\n      '->': {\n        '0|1|2|3': {\n          action_: 'r=',\n          nextState: 'r'\n        },\n        'a|as': {\n          action_: ['output', 'r='],\n          nextState: 'r'\n        },\n        '*': {\n          action_: ['output', 'r='],\n          nextState: 'r'\n        }\n      },\n      '+': {\n        'o': {\n          action_: 'd= kv',\n          nextState: 'd'\n        },\n        'd|D': {\n          action_: 'd=',\n          nextState: 'd'\n        },\n        'q': {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'qd|qD': {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'dq': {\n          action_: ['output', 'd='],\n          nextState: 'd'\n        },\n        '3': {\n          action_: ['sb=false', 'output', 'operator'],\n          nextState: '0'\n        }\n      },\n      'amount': {\n        '0|2': {\n          action_: 'a=',\n          nextState: 'a'\n        }\n      },\n      'pm-operator': {\n        '0|1|2|a|as': {\n          action_: ['sb=false', 'output', {\n            type_: 'operator',\n            option: '\\\\pm'\n          }],\n          nextState: '0'\n        }\n      },\n      'operator': {\n        '0|1|2|a|as': {\n          action_: ['sb=false', 'output', 'operator'],\n          nextState: '0'\n        }\n      },\n      '-$': {\n        'o|q': {\n          action_: ['charge or bond', 'output'],\n          nextState: 'qd'\n        },\n        'd': {\n          action_: 'd=',\n          nextState: 'd'\n        },\n        'D': {\n          action_: ['output', {\n            type_: 'bond',\n            option: \"-\"\n          }],\n          nextState: '3'\n        },\n        'q': {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'qd': {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'qD|dq': {\n          action_: ['output', {\n            type_: 'bond',\n            option: \"-\"\n          }],\n          nextState: '3'\n        }\n      },\n      '-9': {\n        '3|o': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '3'\n        }\n      },\n      '- orbital overlap': {\n        'o': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '2'\n        },\n        'd': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '2'\n        }\n      },\n      '-': {\n        '0|1|2': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'beginsWithBond=true', {\n            type_: 'bond',\n            option: \"-\"\n          }],\n          nextState: '3'\n        },\n        '3': {\n          action_: {\n            type_: 'bond',\n            option: \"-\"\n          }\n        },\n        'a': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '2'\n        },\n        'as': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, {\n            type_: 'bond',\n            option: \"-\"\n          }],\n          nextState: '3'\n        },\n        'b': {\n          action_: 'b='\n        },\n        'o': {\n          action_: {\n            type_: '- after o/d',\n            option: false\n          },\n          nextState: '2'\n        },\n        'q': {\n          action_: {\n            type_: '- after o/d',\n            option: false\n          },\n          nextState: '2'\n        },\n        'd|qd|dq': {\n          action_: {\n            type_: '- after o/d',\n            option: true\n          },\n          nextState: '2'\n        },\n        'D|qD|p': {\n          action_: ['output', {\n            type_: 'bond',\n            option: \"-\"\n          }],\n          nextState: '3'\n        }\n      },\n      'amount2': {\n        '1|3': {\n          action_: 'a=',\n          nextState: 'a'\n        }\n      },\n      'letters': {\n        '0|1|2|3|a|as|b|p|bp|o': {\n          action_: 'o=',\n          nextState: 'o'\n        },\n        'q|dq': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        },\n        'd|D|qd|qD': {\n          action_: 'o after d',\n          nextState: 'o'\n        }\n      },\n      'digits': {\n        'o': {\n          action_: 'q=',\n          nextState: 'q'\n        },\n        'd|D': {\n          action_: 'q=',\n          nextState: 'dq'\n        },\n        'q': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        },\n        'a': {\n          action_: 'o=',\n          nextState: 'o'\n        }\n      },\n      'space A': {\n        'b|p|bp': {}\n      },\n      'space': {\n        'a': {\n          nextState: 'as'\n        },\n        '0': {\n          action_: 'sb=false'\n        },\n        '1|2': {\n          action_: 'sb=true'\n        },\n        'r|rt|rd|rdt|rdq': {\n          action_: 'output',\n          nextState: '0'\n        },\n        '*': {\n          action_: ['output', 'sb=true'],\n          nextState: '1'\n        }\n      },\n      '1st-level escape': {\n        '1|2': {\n          action_: ['output', {\n            type_: 'insert+p1',\n            option: '1st-level escape'\n          }]\n        },\n        '*': {\n          action_: ['output', {\n            type_: 'insert+p1',\n            option: '1st-level escape'\n          }],\n          nextState: '0'\n        }\n      },\n      '[(...)]': {\n        'r|rt': {\n          action_: 'rd=',\n          nextState: 'rd'\n        },\n        'rd|rdt': {\n          action_: 'rq=',\n          nextState: 'rdq'\n        }\n      },\n      '...': {\n        'o|d|D|dq|qd|qD': {\n          action_: ['output', {\n            type_: 'bond',\n            option: \"...\"\n          }],\n          nextState: '3'\n        },\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, {\n            type_: 'insert',\n            option: 'ellipsis'\n          }],\n          nextState: '1'\n        }\n      },\n      '. |* ': {\n        '*': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'addition compound'\n          }],\n          nextState: '1'\n        }\n      },\n      'state of aggregation $': {\n        '*': {\n          action_: ['output', 'state of aggregation'],\n          nextState: '1'\n        }\n      },\n      '{[(': {\n        'a|as|o': {\n          action_: ['o=', 'output', 'parenthesisLevel++'],\n          nextState: '2'\n        },\n        '0|1|2|3': {\n          action_: ['o=', 'output', 'parenthesisLevel++'],\n          nextState: '2'\n        },\n        '*': {\n          action_: ['output', 'o=', 'output', 'parenthesisLevel++'],\n          nextState: '2'\n        }\n      },\n      ')]}': {\n        '0|1|2|3|b|p|bp|o': {\n          action_: ['o=', 'parenthesisLevel--'],\n          nextState: 'o'\n        },\n        'a|as|d|D|q|qd|qD|dq': {\n          action_: ['output', 'o=', 'parenthesisLevel--'],\n          nextState: 'o'\n        }\n      },\n      ', ': {\n        '*': {\n          action_: ['output', 'comma'],\n          nextState: '0'\n        }\n      },\n      '^_': {\n        // ^ and _ without a sensible argument\n        '*': {}\n      },\n      '^{(...)}|^($...$)': {\n        '0|1|2|as': {\n          action_: 'b=',\n          nextState: 'b'\n        },\n        'p': {\n          action_: 'b=',\n          nextState: 'bp'\n        },\n        '3|o': {\n          action_: 'd= kv',\n          nextState: 'D'\n        },\n        'q': {\n          action_: 'd=',\n          nextState: 'qD'\n        },\n        'd|D|qd|qD|dq': {\n          action_: ['output', 'd='],\n          nextState: 'D'\n        }\n      },\n      '^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|\\'': {\n        '0|1|2|as': {\n          action_: 'b=',\n          nextState: 'b'\n        },\n        'p': {\n          action_: 'b=',\n          nextState: 'bp'\n        },\n        '3|o': {\n          action_: 'd= kv',\n          nextState: 'd'\n        },\n        'q': {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'd|qd|D|qD': {\n          action_: 'd='\n        },\n        'dq': {\n          action_: ['output', 'd='],\n          nextState: 'd'\n        }\n      },\n      '_{(state of aggregation)}$': {\n        'd|D|q|qd|qD|dq': {\n          action_: ['output', 'q='],\n          nextState: 'q'\n        }\n      },\n      '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n        '0|1|2|as': {\n          action_: 'p=',\n          nextState: 'p'\n        },\n        'b': {\n          action_: 'p=',\n          nextState: 'bp'\n        },\n        '3|o': {\n          action_: 'q=',\n          nextState: 'q'\n        },\n        'd|D': {\n          action_: 'q=',\n          nextState: 'dq'\n        },\n        'q|qd|qD|dq': {\n          action_: ['output', 'q='],\n          nextState: 'q'\n        }\n      },\n      '=<>': {\n        '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'bond'],\n          nextState: '3'\n        }\n      },\n      '#': {\n        '0|1|2|3|a|as|o': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, {\n            type_: 'bond',\n            option: \"#\"\n          }],\n          nextState: '3'\n        }\n      },\n      '{}': {\n        '*': {\n          action_: {\n            type_: 'output',\n            option: 1\n          },\n          nextState: '1'\n        }\n      },\n      '{...}': {\n        '0|1|2|3|a|as|b|p|bp': {\n          action_: 'o=',\n          nextState: 'o'\n        },\n        'o|d|D|q|qd|qD|dq': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        }\n      },\n      '$...$': {\n        'a': {\n          action_: 'a='\n        },\n        // 2$n$\n        '0|1|2|3|as|b|p|bp|o': {\n          action_: 'o=',\n          nextState: 'o'\n        },\n        // not 'amount'\n        'as|o': {\n          action_: 'o='\n        },\n        'q|d|D|qd|qD|dq': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        }\n      },\n      '\\\\bond{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'bond'],\n          nextState: \"3\"\n        }\n      },\n      '\\\\frac{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'frac-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\overset{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'overset-output'],\n          nextState: '3'\n        }\n      },\n      \"\\\\underset{(...)}\": {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'underset-output'],\n          nextState: '3'\n        }\n      },\n      \"\\\\underbrace{(...)}\": {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'underbrace-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'color-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\color{(...)}0': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'color0-output']\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'ce'],\n          nextState: '3'\n        }\n      },\n      '\\\\,': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'copy'],\n          nextState: '1'\n        }\n      },\n      '\\\\x{}{}|\\\\x{}|\\\\x': {\n        '0|1|2|3|a|as|b|p|bp|o|c0': {\n          action_: ['o=', 'output'],\n          nextState: '3'\n        },\n        '*': {\n          action_: ['output', 'o=', 'output'],\n          nextState: '3'\n        }\n      },\n      'others': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'copy'],\n          nextState: '3'\n        }\n      },\n      'else2': {\n        'a': {\n          action_: 'a to o',\n          nextState: 'o',\n          revisit: true\n        },\n        'as': {\n          action_: ['output', 'sb=true'],\n          nextState: '1',\n          revisit: true\n        },\n        'r|rt|rd|rdt|rdq': {\n          action_: ['output'],\n          nextState: '0',\n          revisit: true\n        },\n        '*': {\n          action_: ['output', 'copy'],\n          nextState: '3'\n        }\n      }\n    }),\n    actions: {\n      'o after d': function oAfterD(buffer, m) {\n        var ret;\n\n        if ((buffer.d || \"\").match(/^[0-9]+$/)) {\n          var tmp = buffer.d;\n          buffer.d = undefined;\n          ret = this['output'](buffer);\n          buffer.b = tmp;\n        } else {\n          ret = this['output'](buffer);\n        }\n\n        mhchemParser.actions['o='](buffer, m);\n        return ret;\n      },\n      'd= kv': function dKv(buffer, m) {\n        buffer.d = m;\n        buffer.dType = 'kv';\n      },\n      'charge or bond': function chargeOrBond(buffer, m) {\n        if (buffer['beginsWithBond']) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          mhchemParser.concatArray(ret, this['output'](buffer));\n          mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n          return ret;\n        } else {\n          buffer.d = m;\n        }\n      },\n      '- after o/d': function afterOD(buffer, m, isAfterD) {\n        var c1 = mhchemParser.patterns.match_('orbital', buffer.o || \"\");\n        var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || \"\");\n        var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || \"\");\n        var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || \"\");\n        var hyphenFollows = m === \"-\" && (c1 && c1.remainder === \"\" || c2 || c3 || c4);\n\n        if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n          buffer.o = '$' + buffer.o + '$';\n        }\n        /** @type {ParserOutput[]} */\n\n\n        var ret = [];\n\n        if (hyphenFollows) {\n          mhchemParser.concatArray(ret, this['output'](buffer));\n          ret.push({\n            type_: 'hyphen'\n          });\n        } else {\n          c1 = mhchemParser.patterns.match_('digits', buffer.d || \"\");\n\n          if (isAfterD && c1 && c1.remainder === '') {\n            mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));\n            mhchemParser.concatArray(ret, this['output'](buffer));\n          } else {\n            mhchemParser.concatArray(ret, this['output'](buffer));\n            mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n          }\n        }\n\n        return ret;\n      },\n      'a to o': function aToO(buffer) {\n        buffer.o = buffer.a;\n        buffer.a = undefined;\n      },\n      'sb=true': function sbTrue(buffer) {\n        buffer.sb = true;\n      },\n      'sb=false': function sbFalse(buffer) {\n        buffer.sb = false;\n      },\n      'beginsWithBond=true': function beginsWithBondTrue(buffer) {\n        buffer['beginsWithBond'] = true;\n      },\n      'beginsWithBond=false': function beginsWithBondFalse(buffer) {\n        buffer['beginsWithBond'] = false;\n      },\n      'parenthesisLevel++': function parenthesisLevel(buffer) {\n        buffer['parenthesisLevel']++;\n      },\n      'parenthesisLevel--': function parenthesisLevel(buffer) {\n        buffer['parenthesisLevel']--;\n      },\n      'state of aggregation': function stateOfAggregation(buffer, m) {\n        return {\n          type_: 'state of aggregation',\n          p1: mhchemParser.go(m, 'o')\n        };\n      },\n      'comma': function comma(buffer, m) {\n        var a = m.replace(/\\s*$/, '');\n        var withSpace = a !== m;\n\n        if (withSpace && buffer['parenthesisLevel'] === 0) {\n          return {\n            type_: 'comma enumeration L',\n            p1: a\n          };\n        } else {\n          return {\n            type_: 'comma enumeration M',\n            p1: a\n          };\n        }\n      },\n      'output': function output(buffer, m, entityFollows) {\n        // entityFollows:\n        //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\n        //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\n        //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\n\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret;\n\n        if (!buffer.r) {\n          ret = [];\n\n          if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {//ret = [];\n          } else {\n            if (buffer.sb) {\n              ret.push({\n                type_: 'entitySkip'\n              });\n            }\n\n            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {\n              buffer.o = buffer.a;\n              buffer.a = undefined;\n            } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n              buffer.o = buffer.a;\n              buffer.d = buffer.b;\n              buffer.q = buffer.p;\n              buffer.a = buffer.b = buffer.p = undefined;\n            } else {\n              if (buffer.o && buffer.dType === 'kv' && mhchemParser.patterns.match_('d-oxidation$', buffer.d || \"\")) {\n                buffer.dType = 'oxidation';\n              } else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {\n                buffer.dType = undefined;\n              }\n            }\n\n            ret.push({\n              type_: 'chemfive',\n              a: mhchemParser.go(buffer.a, 'a'),\n              b: mhchemParser.go(buffer.b, 'bd'),\n              p: mhchemParser.go(buffer.p, 'pq'),\n              o: mhchemParser.go(buffer.o, 'o'),\n              q: mhchemParser.go(buffer.q, 'pq'),\n              d: mhchemParser.go(buffer.d, buffer.dType === 'oxidation' ? 'oxidation' : 'bd'),\n              dType: buffer.dType\n            });\n          }\n        } else {\n          // r\n\n          /** @type {ParserOutput[]} */\n          var rd;\n\n          if (buffer.rdt === 'M') {\n            rd = mhchemParser.go(buffer.rd, 'tex-math');\n          } else if (buffer.rdt === 'T') {\n            rd = [{\n              type_: 'text',\n              p1: buffer.rd || \"\"\n            }];\n          } else {\n            rd = mhchemParser.go(buffer.rd);\n          }\n          /** @type {ParserOutput[]} */\n\n\n          var rq;\n\n          if (buffer.rqt === 'M') {\n            rq = mhchemParser.go(buffer.rq, 'tex-math');\n          } else if (buffer.rqt === 'T') {\n            rq = [{\n              type_: 'text',\n              p1: buffer.rq || \"\"\n            }];\n          } else {\n            rq = mhchemParser.go(buffer.rq);\n          }\n\n          ret = {\n            type_: 'arrow',\n            r: buffer.r,\n            rd: rd,\n            rq: rq\n          };\n        }\n\n        for (var p in buffer) {\n          if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {\n            delete buffer[p];\n          }\n        }\n\n        return ret;\n      },\n      'oxidation-output': function oxidationOutput(buffer, m) {\n        var ret = [\"{\"];\n        mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));\n        ret.push(\"}\");\n        return ret;\n      },\n      'frac-output': function fracOutput(buffer, m) {\n        return {\n          type_: 'frac-ce',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'overset-output': function oversetOutput(buffer, m) {\n        return {\n          type_: 'overset',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'underset-output': function undersetOutput(buffer, m) {\n        return {\n          type_: 'underset',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'underbrace-output': function underbraceOutput(buffer, m) {\n        return {\n          type_: 'underbrace',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'color-output': function colorOutput(buffer, m) {\n        return {\n          type_: 'color',\n          color1: m[0],\n          color2: mhchemParser.go(m[1])\n        };\n      },\n      'r=': function r(buffer, m) {\n        buffer.r = m;\n      },\n      'rdt=': function rdt(buffer, m) {\n        buffer.rdt = m;\n      },\n      'rd=': function rd(buffer, m) {\n        buffer.rd = m;\n      },\n      'rqt=': function rqt(buffer, m) {\n        buffer.rqt = m;\n      },\n      'rq=': function rq(buffer, m) {\n        buffer.rq = m;\n      },\n      'operator': function operator(buffer, m, p1) {\n        return {\n          type_: 'operator',\n          kind_: p1 || m\n        };\n      }\n    }\n  },\n  'a': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {}\n      },\n      '1/2$': {\n        '0': {\n          action_: '1/2'\n        }\n      },\n      'else': {\n        '0': {\n          nextState: '1',\n          revisit: true\n        }\n      },\n      '$(...)$': {\n        '*': {\n          action_: 'tex-math tight',\n          nextState: '1'\n        }\n      },\n      ',': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'commaDecimal'\n          }\n        }\n      },\n      'else2': {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {}\n  },\n  'o': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {}\n      },\n      '1/2$': {\n        '0': {\n          action_: '1/2'\n        }\n      },\n      'else': {\n        '0': {\n          nextState: '1',\n          revisit: true\n        }\n      },\n      'letters': {\n        '*': {\n          action_: 'rm'\n        }\n      },\n      '\\\\ca': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'circa'\n          }\n        }\n      },\n      '\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'copy'\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '{(...)}': {\n        '*': {\n          action_: '{text}'\n        }\n      },\n      'else2': {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {}\n  },\n  'text': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '{...}': {\n        '*': {\n          action_: 'text='\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '\\\\greek': {\n        '*': {\n          action_: ['output', 'rm']\n        }\n      },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: ['output', 'copy']\n        }\n      },\n      'else': {\n        '*': {\n          action_: 'text='\n        }\n      }\n    }),\n    actions: {\n      'output': function output(buffer) {\n        if (buffer.text_) {\n          /** @type {ParserOutput} */\n          var ret = {\n            type_: 'text',\n            p1: buffer.text_\n          };\n\n          for (var p in buffer) {\n            delete buffer[p];\n          }\n\n          return ret;\n        }\n      }\n    }\n  },\n  'pq': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {}\n      },\n      'state of aggregation $': {\n        '*': {\n          action_: 'state of aggregation'\n        }\n      },\n      'i$': {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      '(KV letters),': {\n        '0': {\n          action_: 'rm',\n          nextState: '0'\n        }\n      },\n      'formula$': {\n        '0': {\n          nextState: 'f',\n          revisit: true\n        }\n      },\n      '1/2$': {\n        '0': {\n          action_: '1/2'\n        }\n      },\n      'else': {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '{(...)}': {\n        '*': {\n          action_: 'text'\n        }\n      },\n      'a-z': {\n        'f': {\n          action_: 'tex-math'\n        }\n      },\n      'letters': {\n        '*': {\n          action_: 'rm'\n        }\n      },\n      '-9.,9': {\n        '*': {\n          action_: '9,9'\n        }\n      },\n      ',': {\n        '*': {\n          action_: {\n            type_: 'insert+p1',\n            option: 'comma enumeration S'\n          }\n        }\n      },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': {\n          action_: 'color-output'\n        }\n      },\n      '\\\\color{(...)}0': {\n        '*': {\n          action_: 'color0-output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: 'ce'\n        }\n      },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'copy'\n        }\n      },\n      'else2': {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'state of aggregation': function stateOfAggregation(buffer, m) {\n        return {\n          type_: 'state of aggregation subscript',\n          p1: mhchemParser.go(m, 'o')\n        };\n      },\n      'color-output': function colorOutput(buffer, m) {\n        return {\n          type_: 'color',\n          color1: m[0],\n          color2: mhchemParser.go(m[1], 'pq')\n        };\n      }\n    }\n  },\n  'bd': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {}\n      },\n      'x$': {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      'formula$': {\n        '0': {\n          nextState: 'f',\n          revisit: true\n        }\n      },\n      'else': {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      '-9.,9 no missing 0': {\n        '*': {\n          action_: '9,9'\n        }\n      },\n      '.': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'electron dot'\n          }\n        }\n      },\n      'a-z': {\n        'f': {\n          action_: 'tex-math'\n        }\n      },\n      'x': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'KV x'\n          }\n        }\n      },\n      'letters': {\n        '*': {\n          action_: 'rm'\n        }\n      },\n      '\\'': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'prime'\n          }\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '{(...)}': {\n        '*': {\n          action_: 'text'\n        }\n      },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': {\n          action_: 'color-output'\n        }\n      },\n      '\\\\color{(...)}0': {\n        '*': {\n          action_: 'color0-output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: 'ce'\n        }\n      },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'copy'\n        }\n      },\n      'else2': {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'color-output': function colorOutput(buffer, m) {\n        return {\n          type_: 'color',\n          color1: m[0],\n          color2: mhchemParser.go(m[1], 'bd')\n        };\n      }\n    }\n  },\n  'oxidation': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {}\n      },\n      'roman numeral': {\n        '*': {\n          action_: 'roman-numeral'\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      'else': {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'roman-numeral': function romanNumeral(buffer, m) {\n        return {\n          type_: 'roman numeral',\n          p1: m || \"\"\n        };\n      }\n    }\n  },\n  'tex-math': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: ['output', 'ce']\n        }\n      },\n      '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'o='\n        }\n      },\n      'else': {\n        '*': {\n          action_: 'o='\n        }\n      }\n    }),\n    actions: {\n      'output': function output(buffer) {\n        if (buffer.o) {\n          /** @type {ParserOutput} */\n          var ret = {\n            type_: 'tex-math',\n            p1: buffer.o\n          };\n\n          for (var p in buffer) {\n            delete buffer[p];\n          }\n\n          return ret;\n        }\n      }\n    }\n  },\n  'tex-math tight': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: ['output', 'ce']\n        }\n      },\n      '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'o='\n        }\n      },\n      '-|+': {\n        '*': {\n          action_: 'tight operator'\n        }\n      },\n      'else': {\n        '*': {\n          action_: 'o='\n        }\n      }\n    }),\n    actions: {\n      'tight operator': function tightOperator(buffer, m) {\n        buffer.o = (buffer.o || \"\") + \"{\" + m + \"}\";\n      },\n      'output': function output(buffer) {\n        if (buffer.o) {\n          /** @type {ParserOutput} */\n          var ret = {\n            type_: 'tex-math',\n            p1: buffer.o\n          };\n\n          for (var p in buffer) {\n            delete buffer[p];\n          }\n\n          return ret;\n        }\n      }\n    }\n  },\n  '9,9': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {}\n      },\n      ',': {\n        '*': {\n          action_: 'comma'\n        }\n      },\n      'else': {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'comma': function comma() {\n        return {\n          type_: 'commaDecimal'\n        };\n      }\n    }\n  },\n  //#endregion\n  //\n  // \\pu state machines\n  //\n  //#region pu\n  'pu': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {\n          action_: 'output'\n        }\n      },\n      'space$': {\n        '*': {\n          action_: ['output', 'space']\n        }\n      },\n      '{[(|)]}': {\n        '0|a': {\n          action_: 'copy'\n        }\n      },\n      '(-)(9)^(-9)': {\n        '0': {\n          action_: 'number^',\n          nextState: 'a'\n        }\n      },\n      '(-)(9.,9)(e)(99)': {\n        '0': {\n          action_: 'enumber',\n          nextState: 'a'\n        }\n      },\n      'space': {\n        '0|a': {}\n      },\n      'pm-operator': {\n        '0|a': {\n          action_: {\n            type_: 'operator',\n            option: '\\\\pm'\n          },\n          nextState: '0'\n        }\n      },\n      'operator': {\n        '0|a': {\n          action_: 'copy',\n          nextState: '0'\n        }\n      },\n      '//': {\n        'd': {\n          action_: 'o=',\n          nextState: '/'\n        }\n      },\n      '/': {\n        'd': {\n          action_: 'o=',\n          nextState: '/'\n        }\n      },\n      '{...}|else': {\n        '0|d': {\n          action_: 'd=',\n          nextState: 'd'\n        },\n        'a': {\n          action_: ['space', 'd='],\n          nextState: 'd'\n        },\n        '/|q': {\n          action_: 'q=',\n          nextState: 'q'\n        }\n      }\n    }),\n    actions: {\n      'enumber': function enumber(buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n\n        if (m[0] === \"+-\" || m[0] === \"+/-\") {\n          ret.push(\"\\\\pm \");\n        } else if (m[0]) {\n          ret.push(m[0]);\n        }\n\n        if (m[1]) {\n          mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n\n          if (m[2]) {\n            if (m[2].match(/[,.]/)) {\n              mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));\n            } else {\n              ret.push(m[2]);\n            }\n          }\n\n          m[3] = m[4] || m[3];\n\n          if (m[3]) {\n            m[3] = m[3].trim();\n\n            if (m[3] === \"e\" || m[3].substr(0, 1) === \"*\") {\n              ret.push({\n                type_: 'cdot'\n              });\n            } else {\n              ret.push({\n                type_: 'times'\n              });\n            }\n          }\n        }\n\n        if (m[3]) {\n          ret.push(\"10^{\" + m[5] + \"}\");\n        }\n\n        return ret;\n      },\n      'number^': function number(buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n\n        if (m[0] === \"+-\" || m[0] === \"+/-\") {\n          ret.push(\"\\\\pm \");\n        } else if (m[0]) {\n          ret.push(m[0]);\n        }\n\n        mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n        ret.push(\"^{\" + m[2] + \"}\");\n        return ret;\n      },\n      'operator': function operator(buffer, m, p1) {\n        return {\n          type_: 'operator',\n          kind_: p1 || m\n        };\n      },\n      'space': function space() {\n        return {\n          type_: 'pu-space-1'\n        };\n      },\n      'output': function output(buffer) {\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret;\n        var md = mhchemParser.patterns.match_('{(...)}', buffer.d || \"\");\n\n        if (md && md.remainder === '') {\n          buffer.d = md.match_;\n        }\n\n        var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || \"\");\n\n        if (mq && mq.remainder === '') {\n          buffer.q = mq.match_;\n        }\n\n        if (buffer.d) {\n          buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n          buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n        }\n\n        if (buffer.q) {\n          // fraction\n          buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n          buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n          var b5 = {\n            d: mhchemParser.go(buffer.d, 'pu'),\n            q: mhchemParser.go(buffer.q, 'pu')\n          };\n\n          if (buffer.o === '//') {\n            ret = {\n              type_: 'pu-frac',\n              p1: b5.d,\n              p2: b5.q\n            };\n          } else {\n            ret = b5.d;\n\n            if (b5.d.length > 1 || b5.q.length > 1) {\n              ret.push({\n                type_: ' / '\n              });\n            } else {\n              ret.push({\n                type_: '/'\n              });\n            }\n\n            mhchemParser.concatArray(ret, b5.q);\n          }\n        } else {\n          // no fraction\n          ret = mhchemParser.go(buffer.d, 'pu-2');\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      }\n    }\n  },\n  'pu-2': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '*': {\n        '*': {\n          action_: ['output', 'cdot'],\n          nextState: '0'\n        }\n      },\n      '\\\\x': {\n        '*': {\n          action_: 'rm='\n        }\n      },\n      'space': {\n        '*': {\n          action_: ['output', 'space'],\n          nextState: '0'\n        }\n      },\n      '^{(...)}|^(-1)': {\n        '1': {\n          action_: '^(-1)'\n        }\n      },\n      '-9.,9': {\n        '0': {\n          action_: 'rm=',\n          nextState: '0'\n        },\n        '1': {\n          action_: '^(-1)',\n          nextState: '0'\n        }\n      },\n      '{...}|else': {\n        '*': {\n          action_: 'rm=',\n          nextState: '1'\n        }\n      }\n    }),\n    actions: {\n      'cdot': function cdot() {\n        return {\n          type_: 'tight cdot'\n        };\n      },\n      '^(-1)': function _(buffer, m) {\n        buffer.rm += \"^{\" + m + \"}\";\n      },\n      'space': function space() {\n        return {\n          type_: 'pu-space-2'\n        };\n      },\n      'output': function output(buffer) {\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret = [];\n\n        if (buffer.rm) {\n          var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || \"\");\n\n          if (mrm && mrm.remainder === '') {\n            ret = mhchemParser.go(mrm.match_, 'pu');\n          } else {\n            ret = {\n              type_: 'rm',\n              p1: buffer.rm\n            };\n          }\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      }\n    }\n  },\n  'pu-9,9': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '0': {\n          action_: 'output-0'\n        },\n        'o': {\n          action_: 'output-o'\n        }\n      },\n      ',': {\n        '0': {\n          action_: ['output-0', 'comma'],\n          nextState: 'o'\n        }\n      },\n      '.': {\n        '0': {\n          action_: ['output-0', 'copy'],\n          nextState: 'o'\n        }\n      },\n      'else': {\n        '*': {\n          action_: 'text='\n        }\n      }\n    }),\n    actions: {\n      'comma': function comma() {\n        return {\n          type_: 'commaDecimal'\n        };\n      },\n      'output-0': function output0(buffer) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        buffer.text_ = buffer.text_ || \"\";\n\n        if (buffer.text_.length > 4) {\n          var a = buffer.text_.length % 3;\n\n          if (a === 0) {\n            a = 3;\n          }\n\n          for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\n            ret.push(buffer.text_.substr(i, 3));\n            ret.push({\n              type_: '1000 separator'\n            });\n          }\n\n          ret.push(buffer.text_.substr(0, a));\n          ret.reverse();\n        } else {\n          ret.push(buffer.text_);\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      },\n      'output-o': function outputO(buffer) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        buffer.text_ = buffer.text_ || \"\";\n\n        if (buffer.text_.length > 4) {\n          var a = buffer.text_.length - 3;\n\n          for (var i = 0; i < a; i += 3) {\n            ret.push(buffer.text_.substr(i, 3));\n            ret.push({\n              type_: '1000 separator'\n            });\n          }\n\n          ret.push(buffer.text_.substr(i));\n        } else {\n          ret.push(buffer.text_);\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      }\n    }\n  } //#endregion\n\n}; //\n// texify: Take MhchemParser output and convert it to TeX\n//\n\n/** @type {Texify} */\n\nvar texify = {\n  go: function go(input, isInner) {\n    // (recursive, max 4 levels)\n    if (!input) {\n      return \"\";\n    }\n\n    var res = \"\";\n    var cee = false;\n\n    for (var i = 0; i < input.length; i++) {\n      var inputi = input[i];\n\n      if (typeof inputi === \"string\") {\n        res += inputi;\n      } else {\n        res += texify._go2(inputi);\n\n        if (inputi.type_ === '1st-level escape') {\n          cee = true;\n        }\n      }\n    }\n\n    if (!isInner && !cee && res) {\n      res = \"{\" + res + \"}\";\n    }\n\n    return res;\n  },\n  _goInner: function _goInner(input) {\n    if (!input) {\n      return input;\n    }\n\n    return texify.go(input, true);\n  },\n  _go2: function _go2(buf) {\n    /** @type {undefined | string} */\n    var res;\n\n    switch (buf.type_) {\n      case 'chemfive':\n        res = \"\";\n        var b5 = {\n          a: texify._goInner(buf.a),\n          b: texify._goInner(buf.b),\n          p: texify._goInner(buf.p),\n          o: texify._goInner(buf.o),\n          q: texify._goInner(buf.q),\n          d: texify._goInner(buf.d)\n        }; //\n        // a\n        //\n\n        if (b5.a) {\n          if (b5.a.match(/^[+\\-]/)) {\n            b5.a = \"{\" + b5.a + \"}\";\n          }\n\n          res += b5.a + \"\\\\,\";\n        } //\n        // b and p\n        //\n\n\n        if (b5.b || b5.p) {\n          res += \"{\\\\vphantom{X}}\";\n          res += \"^{\\\\hphantom{\" + (b5.b || \"\") + \"}}_{\\\\hphantom{\" + (b5.p || \"\") + \"}}\";\n          res += \"{\\\\vphantom{X}}\";\n          res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\mathllap{\" + (b5.b || \"\") + \"}}\";\n          res += \"_{\\\\vphantom{2}\\\\mathllap{\\\\smash[t]{\" + (b5.p || \"\") + \"}}}\";\n        } //\n        // o\n        //\n\n\n        if (b5.o) {\n          if (b5.o.match(/^[+\\-]/)) {\n            b5.o = \"{\" + b5.o + \"}\";\n          }\n\n          res += b5.o;\n        } //\n        // q and d\n        //\n\n\n        if (buf.dType === 'kv') {\n          if (b5.d || b5.q) {\n            res += \"{\\\\vphantom{X}}\";\n          }\n\n          if (b5.d) {\n            res += \"^{\" + b5.d + \"}\";\n          }\n\n          if (b5.q) {\n            res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n          }\n        } else if (buf.dType === 'oxidation') {\n          if (b5.d) {\n            res += \"{\\\\vphantom{X}}\";\n            res += \"^{\" + b5.d + \"}\";\n          }\n\n          if (b5.q) {\n            res += \"{\\\\vphantom{X}}\";\n            res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n          }\n        } else {\n          if (b5.q) {\n            res += \"{\\\\vphantom{X}}\";\n            res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n          }\n\n          if (b5.d) {\n            res += \"{\\\\vphantom{X}}\";\n            res += \"^{\" + b5.d + \"}\";\n          }\n        }\n\n        break;\n\n      case 'rm':\n        res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n        break;\n\n      case 'text':\n        if (buf.p1.match(/[\\^_]/)) {\n          buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n          res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n        } else {\n          res = \"\\\\text{\" + buf.p1 + \"}\";\n        }\n\n        break;\n\n      case 'roman numeral':\n        res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n        break;\n\n      case 'state of aggregation':\n        res = \"\\\\mskip2mu \" + texify._goInner(buf.p1);\n        break;\n\n      case 'state of aggregation subscript':\n        res = \"\\\\mskip1mu \" + texify._goInner(buf.p1);\n        break;\n\n      case 'bond':\n        res = texify._getBond(buf.kind_);\n\n        if (!res) {\n          throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n        }\n\n        break;\n\n      case 'frac':\n        var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n        res = \"\\\\mathchoice{\\\\textstyle\" + c + \"}{\" + c + \"}{\" + c + \"}{\" + c + \"}\";\n        break;\n\n      case 'pu-frac':\n        var d = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n        res = \"\\\\mathchoice{\\\\textstyle\" + d + \"}{\" + d + \"}{\" + d + \"}{\" + d + \"}\";\n        break;\n\n      case 'tex-math':\n        res = buf.p1 + \" \";\n        break;\n\n      case 'frac-ce':\n        res = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n        break;\n\n      case 'overset':\n        res = \"\\\\overset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n        break;\n\n      case 'underset':\n        res = \"\\\\underset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n        break;\n\n      case 'underbrace':\n        res = \"\\\\underbrace{\" + texify._goInner(buf.p1) + \"}_{\" + texify._goInner(buf.p2) + \"}\";\n        break;\n\n      case 'color':\n        res = \"{\\\\color{\" + buf.color1 + \"}{\" + texify._goInner(buf.color2) + \"}}\";\n        break;\n\n      case 'color0':\n        res = \"\\\\color{\" + buf.color + \"}\";\n        break;\n\n      case 'arrow':\n        var b6 = {\n          rd: texify._goInner(buf.rd),\n          rq: texify._goInner(buf.rq)\n        };\n\n        var arrow = \"\\\\x\" + texify._getArrow(buf.r);\n\n        if (b6.rq) {\n          arrow += \"[{\" + b6.rq + \"}]\";\n        }\n\n        if (b6.rd) {\n          arrow += \"{\" + b6.rd + \"}\";\n        } else {\n          arrow += \"{}\";\n        }\n\n        res = arrow;\n        break;\n\n      case 'operator':\n        res = texify._getOperator(buf.kind_);\n        break;\n\n      case '1st-level escape':\n        res = buf.p1 + \" \"; // &, \\\\\\\\, \\\\hlin\n\n        break;\n\n      case 'space':\n        res = \" \";\n        break;\n\n      case 'entitySkip':\n        res = \"~\";\n        break;\n\n      case 'pu-space-1':\n        res = \"~\";\n        break;\n\n      case 'pu-space-2':\n        res = \"\\\\mkern3mu \";\n        break;\n\n      case '1000 separator':\n        res = \"\\\\mkern2mu \";\n        break;\n\n      case 'commaDecimal':\n        res = \"{,}\";\n        break;\n\n      case 'comma enumeration L':\n        res = \"{\" + buf.p1 + \"}\\\\mkern6mu \";\n        break;\n\n      case 'comma enumeration M':\n        res = \"{\" + buf.p1 + \"}\\\\mkern3mu \";\n        break;\n\n      case 'comma enumeration S':\n        res = \"{\" + buf.p1 + \"}\\\\mkern1mu \";\n        break;\n\n      case 'hyphen':\n        res = \"\\\\text{-}\";\n        break;\n\n      case 'addition compound':\n        res = \"\\\\,{\\\\cdot}\\\\,\";\n        break;\n\n      case 'electron dot':\n        res = \"\\\\mkern1mu \\\\bullet\\\\mkern1mu \";\n        break;\n\n      case 'KV x':\n        res = \"{\\\\times}\";\n        break;\n\n      case 'prime':\n        res = \"\\\\prime \";\n        break;\n\n      case 'cdot':\n        res = \"\\\\cdot \";\n        break;\n\n      case 'tight cdot':\n        res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n        break;\n\n      case 'times':\n        res = \"\\\\times \";\n        break;\n\n      case 'circa':\n        res = \"{\\\\sim}\";\n        break;\n\n      case '^':\n        res = \"uparrow\";\n        break;\n\n      case 'v':\n        res = \"downarrow\";\n        break;\n\n      case 'ellipsis':\n        res = \"\\\\ldots \";\n        break;\n\n      case '/':\n        res = \"/\";\n        break;\n\n      case ' / ':\n        res = \"\\\\,/\\\\,\";\n        break;\n\n      default:\n        assertNever(buf);\n        throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n      // Missing texify rule or unknown MhchemParser output\n    }\n\n    assertString(res);\n    return res;\n  },\n  _getArrow: function _getArrow(a) {\n    switch (a) {\n      case \"->\":\n        return \"rightarrow\";\n\n      case \"\\u2192\":\n        return \"rightarrow\";\n\n      case \"\\u27F6\":\n        return \"rightarrow\";\n\n      case \"<-\":\n        return \"leftarrow\";\n\n      case \"<->\":\n        return \"leftrightarrow\";\n\n      case \"<-->\":\n        return \"rightleftarrows\";\n\n      case \"<=>\":\n        return \"rightleftharpoons\";\n\n      case \"\\u21CC\":\n        return \"rightleftharpoons\";\n\n      case \"<=>>\":\n        return \"rightequilibrium\";\n\n      case \"<<=>\":\n        return \"leftequilibrium\";\n\n      default:\n        assertNever(a);\n        throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n    }\n  },\n  _getBond: function _getBond(a) {\n    switch (a) {\n      case \"-\":\n        return \"{-}\";\n\n      case \"1\":\n        return \"{-}\";\n\n      case \"=\":\n        return \"{=}\";\n\n      case \"2\":\n        return \"{=}\";\n\n      case \"#\":\n        return \"{\\\\equiv}\";\n\n      case \"3\":\n        return \"{\\\\equiv}\";\n\n      case \"~\":\n        return \"{\\\\tripledash}\";\n\n      case \"~-\":\n        return \"{\\\\mathrlap{\\\\raisebox{-.1em}{$-$}}\\\\raisebox{.1em}{$\\\\tripledash$}}\";\n\n      case \"~=\":\n        return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}\";\n\n      case \"~--\":\n        return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}\";\n\n      case \"-~-\":\n        return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$-$}}\\\\tripledash}\";\n\n      case \"...\":\n        return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n\n      case \"....\":\n        return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n\n      case \"->\":\n        return \"{\\\\rightarrow}\";\n\n      case \"<-\":\n        return \"{\\\\leftarrow}\";\n\n      case \"<\":\n        return \"{<}\";\n\n      case \">\":\n        return \"{>}\";\n\n      default:\n        assertNever(a);\n        throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n    }\n  },\n  _getOperator: function _getOperator(a) {\n    switch (a) {\n      case \"+\":\n        return \" {}+{} \";\n\n      case \"-\":\n        return \" {}-{} \";\n\n      case \"=\":\n        return \" {}={} \";\n\n      case \"<\":\n        return \" {}<{} \";\n\n      case \">\":\n        return \" {}>{} \";\n\n      case \"<<\":\n        return \" {}\\\\ll{} \";\n\n      case \">>\":\n        return \" {}\\\\gg{} \";\n\n      case \"\\\\pm\":\n        return \" {}\\\\pm{} \";\n\n      case \"\\\\approx\":\n        return \" {}\\\\approx{} \";\n\n      case \"$\\\\approx$\":\n        return \" {}\\\\approx{} \";\n\n      case \"v\":\n        return \" \\\\downarrow{} \";\n\n      case \"(v)\":\n        return \" \\\\downarrow{} \";\n\n      case \"^\":\n        return \" \\\\uparrow{} \";\n\n      case \"(^)\":\n        return \" \\\\uparrow{} \";\n\n      default:\n        assertNever(a);\n        throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n    }\n  }\n}; //\n// Helpers for code anaylsis\n// Will show type error at calling position\n//\n\n/** @param {number} a */\n\nfunction assertNever(a) {}\n/** @param {string} a */\n\n\nfunction assertString(a) {}","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nrequire(\"katex/dist/katex.min.css\")\nrequire(`katex/contrib/mhchem/mhchem.js`)\n\nexport default function BlogPost({ data }) {\n  const post = data.mdx\n  return (\n    <div>\n      <h1>{ post.frontmatter.title }</h1>\n      <MDXRenderer>\n        { post.body }\n      </MDXRenderer>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(slug: { eq: $slug }) {\n      body\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","context","chemParse","consumeArgs","tokens","stateMachine","str","expectedLoc","loc","start","text","texify","go","mhchemParser","input","undefined","lastInput","state","buffer","replace","watchdog","output","machine","stateMachines","t","transitions","iterateTransitions","matches","patterns","match_","pattern","task","iA","action_","actions","type_","option","concatArray","nextState","revisit","remainder","toContinue","b","iB","m","match","splice","substr","findObserveGroups","this","begExcl","begIncl","endIncl","endExcl","beg2Excl","beg2Incl","end2Incl","end2Excl","combine","_match","indexOf","endChars","braces","charAt","endMatchBegin","endMatchEnd","_findObserveGroups","match1","substring","group2","matchRet","join","p","q","d","rm","text_","p1","p2","ret","k","kind_","color","createTransitions","stateArray","split","concat","patternArray","j","tmp","dType","isAfterD","c1","c2","c3","c4","hyphenFollows","sb","entityFollows","rd","rq","r","rdt","rqt","color1","color2","trim","md","mq","b5","mrm","reverse","isInner","res","cee","inputi","_go2","_goInner","buf","_getBond","c","b6","arrow","_getArrow","_getOperator","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","BlogPost","post","data","frontmatter","title","body"],"sourceRoot":""}