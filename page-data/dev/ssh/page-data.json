{
    "componentChunkName": "component---src-templates-blogpost-js",
    "path": "/dev/ssh",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ssh\"), mdx(\"h2\", null, \"scp\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"scp -i <key> [-rp] <local file> <remote file>\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-r\"), \". recursive (for directories)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-p\"), \". preserve modification times and modes\")), mdx(\"h2\", null, \"rsync\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"rsync -av -e \\\"ssh -i <key>\\\" --exclude=\\\"*.out\\\" <source> <user>@<host>:<dest>\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.cyberciti.biz/faq/scp-exclude-files-when-using-command-recursively-on-unix-linux/\"\n  }, \"source\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-a\"), \". recursive\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-v\"), \". verbose\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-e\"), \". use SSH\")), mdx(\"h2\", null, \"tmux\"), mdx(\"h3\", null, \"clipboard\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"sudo apt-get install xclip\\n\\n# when connecting, use X11 forwarding\\nssh -Y ...\\n\\n# ~/.tmux.conf\\n# set -g mouse on\\n# set-window-option -g mode-keys vi\\n# bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""}}},"pageContext":{"slug":"dev/ssh"}},
    "staticQueryHashes": []}