{
    "componentChunkName": "component---src-templates-blogpost-js",
    "path": "/deep/pytorch/dgl",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"deep graph library (DGL)\"), mdx(\"h2\", null, \"graph\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"add_edge\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`add_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`add_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`add_self_loop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`adj\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`adj_sparse\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`adjacency_matrix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`adjacency_matrix_scipy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`all_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`apply_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`apply_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`astype\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`batch_num_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`batch_num_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`batch_size\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`canonical_etypes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`clone\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`cpu\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`create\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"formats\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`dstdata\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`dstnodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`dsttypes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edata\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edge_attr_schemes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edge_id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edge_ids\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edge_subgraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edge_type_subgraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`etypes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`filter_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`filter_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`find_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`formats\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`from_networkx\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`from_scipy_sparse_matrix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`get_etype_id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`get_ntype_id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`get_ntype_id_from_dst\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`get_ntype_id_from_src\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`group_apply_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`has_edge_between\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`has_edges_between\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`has_node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`has_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`idtype\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`in_degree\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`in_degrees\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`in_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`in_subgraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`inc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`incidence_matrix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`int\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`is_block\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`is_homogeneous\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`is_multigraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`is_readonly\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`is_unibipartite\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`line_graph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`local_scope\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`local_var\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`long\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`metagraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`multi_pull\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`multi_recv\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`multi_send_and_recv\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`multi_update_all\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`ndata\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`node_attr_schemes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`node_type_subgraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`ntypes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`num_dst_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`num_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`num_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`num_src_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`number_of_dst_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`number_of_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`number_of_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`number_of_src_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`out_degree\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`out_degrees\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`out_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`out_subgraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`predecessors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`prop_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`prop_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`pull\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`push\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`readonly\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`recv\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`register_apply_edge_func\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`register_apply_node_func\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`register_message_func\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`register_reduce_func\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`remove_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`remove_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`remove_self_loop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`reorder_graph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`reverse\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`send\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`send_and_recv\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`set_batch_num_edges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`set_batch_num_nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`set_e_initializer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`set_n_initializer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`shared_memory\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`srcdata\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`srcnodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`srctypes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`subgraph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`successors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`to\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`to_canonical_etype\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.dgl.ai/en/0.6.x/generated/dgl.to_networkx.html\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"to_networkx\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`to_simple\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"`update_all\")), mdx(\"h2\", null, \"datasets\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# importing data\\nimport dgl.data\\n\\ndatasets = [\\n    dgl.data.CoraGraphDataset(),\\n    dgl.data.QM9Dataset(),\\n    dgl.data.QM9EdgeDataset()\\n]\"), \"\\n        \"), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://docs.dgl.ai/en/0.6.x/api/python/dgl.data.html#qm9-dataset\"\n  }, \"QM9Dataset\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ndata\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X.ndata['R']\"), \". cartesian coordinate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X.ndata['Z']\"), \". atomic number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X.nodes()\"), \". get nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X.edges()\"), \". get edges\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""}}},"pageContext":{"slug":"deep/pytorch/dgl"}},
    "staticQueryHashes": []}