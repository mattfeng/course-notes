{
    "componentChunkName": "component---src-templates-blogpost-js",
    "path": "/deep/colab/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"google colab\"), mdx(\"h2\", null, \"Setting up colab\"), mdx(\"h3\", null, \"Conda\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"!pip install -q condacolab\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"import condacolab\\ncondacolab.install()\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"import condacolab\\ncondacolab.check()\"), \"\\n        \"), mdx(\"h3\", null, \"Chemistry\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# dependencies: rdkit\\n!conda install -q -y -c conda-forge rdkit\\n\\n# dependencies: torch, dgl\\n!pip3 install torch==1.9.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html\\n!pip3 install dgl-cu111 -f https://data.dgl.ai/wheels/repo.html\\n\\n# dependencies: dgllife\\n!conda install -c dglteam dgllife\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# importing\\n# be sure to update python3.9 to the version you are using\\nimport sys\\nsys.path.append('/usr/local/lib/python3.9/site-packages/')\"), \"\\n        \"), mdx(\"h3\", null, \"Graphs\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"!apt install libgraphviz-dev\\n!pip install pygraphviz\"), \"\\n        \"), mdx(\"h2\", null, \"Keyboard shortcuts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"cmd+M+A\")), \". add cell above\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"cmd+M+B\")), \". add cell below\")), mdx(\"h2\", null, \"mount google drive\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"from google.colab import drive\\ndrive.mount('/content/gdrive')\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"files will be located in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/content/gdrive/My Drive/\"))), mdx(\"h2\", null, \"download files\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"from google.colab import files\\nfiles.download(\\\"<path to file>\\\")\"), \"\\n        \"), mdx(\"h2\", null, \"check gpu\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\",\n    \"theme\": \"solarized-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"import tensorflow as tf\\ntf.test.gpu_device_name()\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""}}},"pageContext":{"slug":"deep/colab/"}},
    "staticQueryHashes": []}