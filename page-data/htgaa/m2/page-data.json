{
    "componentChunkName": "component---src-templates-blogpost-js",
    "path": "/htgaa/m2/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 2. Bioproduction: plasmids, growth, measurement\"), mdx(\"h2\", null, \"Plasmids 101\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Copy numbers: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3749727/\"\n  }, \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3749727/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Antibiotic resistance genes so we can figure out which cells took up the plasmid\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"selectable marker\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"confers a trait suitable for artificial selection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"often when moving from chassis to chassis\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DNA for a protein of interest should be \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"codon-optimized\"), \" for the chassis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UniProt\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Ensembl\"), \" to find genes to express\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"RBS\"), \". ribosome binding site\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Kozak\"), \" sequence: eukaryotes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Shine-Dalgarno\"), \" sequence: prokaryotes\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Benchling can automatically import plasmids from Addgene\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"intrinsic (rho-independent) termination\"), \". process in prokaryotes to signal the end of transcription and release the newly constructed RNA molecule\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"characterizing which growing conditions are best for production of pigment\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""}}},"pageContext":{"slug":"htgaa/m2/"}},
    "staticQueryHashes": []}